:root{
    --font-family: 'Quicksand', 'Arial', sans-serif;
    --card-size: 300px;
}

/* General styling for dark theme */
body {
    background-color: var(--body-bg-color);
    color: var(--body-text-color);
    font-family: var(--font-family);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    user-select: none;
    height: 100%;
    transition: all 0.3s ease;
}

/* Search bar styling */
#search {
    font-family: var(--font-family);
    width: 80%;
    max-width: 500px;
    padding: 10px;
    font-size: var(--font-size);
    font-weight: var(--font-weight);
    border-radius: 8px;
    border: var(--search-bar-border);
    background-color: var(--search-bar-bg-color);
    color: var(--search-bar-text-color);
    margin-bottom: 20px;
    transition: all 0.3s ease;
}

#search::placeholder {
    color: var(--search-bar-text-color);
    transition: all 0.3s ease;
}

#search:focus {
    background-color: var(--search-bar-hover-color);
    border: var(--search-bar-focus-border);
    outline: none;
    transition: all 0.3s ease;
}

/* Search results styling */
#deckList {
    list-style: none;
    padding: 0;
    margin: 0 0 30px;
    width: 80%;
    max-width: 500px;
    transition: all 0.3s ease;
}

#deckList li {
    background-color: var(--search-element-bg-color);
    border: var(--search-element-border);
    padding: 10px 15px;
    border-radius: 8px;
    margin-bottom: 10px;
    cursor: pointer;
    transition: all 0.3s ease;
}

#deckList li:hover {
    background-color: var(--search-element-hover-color);
    border: var(--search-element-hover-border);
    transition: all 0.3s ease;
}

/* Center the cards container */
#cardsContainer {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--card-size), 1fr));
    gap: 20px;
    padding: 20px;
    max-width: 80%;
    margin: auto;
    justify-content: center;
    align-items: center;
    transition: all 0.3s ease;
}

/* Card styling */
.card {
    width: var(--card-size);
    height: var(--card-size);
    perspective: 1000px;
    cursor: default;
    position: relative;
}

.card > div {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    transition: transform 0.6s ease-in-out;
    overflow: auto;
}

.card ::-webkit-scrollbar {
    width: var(--card-scrollbar-widt);
    border-radius: 0px 8px 8px 0px;
}

.card .front ::-webkit-scrollbar {
    background-image: linear-gradient(to right, var(--card-front-bg-color), var(--card-front-border-color));
}

.card .back ::-webkit-scrollbar {
    background-image: linear-gradient(to right, var(--card-back-bg-color), var(--card-back-border-color));
}

.card .front ::-webkit-scrollbar-thumb {
    background-image: linear-gradient(to right, var(--card-front-bg-color), var(--card-front-scrollbar-thumb-color));
    border-radius: 0px 8px 8px 0px;
}

.card .back ::-webkit-scrollbar-thumb {
    background-image: linear-gradient(to right, var(--card-back-bg-color), var(--card-back-scrollbar-thumb-color));
    border-radius: 0px 8px 8px 0px;
}

.front {
    background-color: var(--card-front-bg-color);
    color: var(--card-front-text-color);
    border: var(--card-front-border);
    font-size: var(--font-size);
    font-weight: var(--font-weight);
    overflow: auto;
    height: 100%;
}

.card .text {
    color: var(--card-text-color);
    margin: 0;
    padding: 10px;
    box-sizing: border-box; /* Include padding and border in the element's width/height */
    max-height: 100%; /* Ensure the text doesn't exceed the card's height */
    overflow: auto; /* Enable scrolling when necessary */
}

/* Card back side */
.back {
    background-color: var(--card-back-bg-color);
    color: var(--card-back-text-color);
    transform: rotateY(180deg);
    border: var(--card-back-border);
    font-size: var(--font-size);
    font-weight: var(--font-weight);
    overflow: auto;
    height: 100%;
}

/* Flipped state */
.card.flipped .front {
    transform: rotateY(180deg);
}

.card.flipped .back {
    transform: rotateY(0);
}